#!/bin/sh

# just put all the keys that are authorized for this system into the
# guest instance
SSH_AUTHORIZED_KEYS=$(grep -h "^ssh" ~/.ssh/authorized_keys cloud-seed/id_ed25519.pub|sed -e 's/^/    - /')

# put a comma-separated list of packages to install here
# NOTE: if you supply the name of a nonexistent package, the whole
# command may fail
PACKAGES="iperf3,iperf,nfs-utils,nfs-common"
RPM_PACKAGES="iperf3 iperf nfs-utils"
DEB_PACKAGES="iperf3 iperf nfs-common"

mkdir -p cloud-seed
cat > cloud-seed/user-data << EOF
#cloud-config
# DO NOT EDIT THIS FILE!!!
# IT IS GENERATED FROM prep-config.sh
#
bootcmd:
  - mount -oro /dev/disk/by-label/cidata /mnt
  - [ cloud-init-per, once, imageprep, sh, -c, '/mnt/imageprep.sh' ]
  - [ cloud-init-per, always, mvpnet-init, sh, -c, '/mnt/mvpnet-init' ]
apt:
  proxy: http://proxy.pdl.cmu.edu:3128/
  http_proxy: http://proxy.pdl.cmu.edu:3128/
  https_proxy: http://proxy.pdl.cmu.edu:3128/
user:
  name: ${USER}
  ssh_authorized_keys: 
${SSH_AUTHORIZED_KEYS}
  sudo: 'ALL=(ALL) NOPASSWD:ALL'
# XXXCRD: this installation method will fail if the list of packages to
#  install does not match what the guest packages manager defines.
packages: [${PACKAGES}]
# XXXCRD: need to migrate to this installation method if we want to
#  maintain a single cloud-user-data file.
# it is OK if one of these fails
#runcmd:
# - mount /dev/disk/by-label/cidata /mnt
# - cd /mnt/packages
# - dpkg -i *
# - dnf install *
# - dnf install ${RPM_PACKAGES}
# - apt-get update && apt-get install ${DEB_PACKAGES}
EOF

cat > cloud-seed/meta-data << EOF
instance-id: iid-local01
dsmode: local
EOF
